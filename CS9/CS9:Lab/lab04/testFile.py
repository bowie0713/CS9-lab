#from Stack import Stack
from lab04 import solveMaze, printMaze
#from lab04 import printMaze

def test_solutionmaze():
    maze = [['+','+','+','+','G','+'], 
    ['+',' ','+',' ',' ','+'], 
    ['+',' ',' ',' ','+','+'], 
    ['+','+','+',' ',' ','+'], 
    ['+',' ',' ',' ',' ','+'], 
    ['+','+','+','+','+','+'] ]
    assert solveMaze(maze, 4, 1) == True
    assert maze == [['+', '+', '+', '+', 'G', '+'], 
    ['+', ' ', '+', 6, 7, '+'], ['+', ' ', ' ', 5, '+', '+'], 
    ['+', '+', '+', 4, ' ', '+'], ['+', 1, 2, 3, ' ', '+'], 
    ['+', '+', '+', '+', '+', '+']]

def test_nosolution():
    maze3 = [
    ['+','+','+','+','G','+'],
    ['+',' ',' ','+','+','+'],
    ['+',' ','+',' ','+','+'],
    ['+',' ',' ',' ',' ','+'],
    ['+',' ',' ',' ',' ','+'],
    ['+','+','+','+','+','+'] ]
    #solveMaze(maze3, 4, 4)
    print(solveMaze(maze3, 4, 4))

    maze3 = [
    ['+','+','+','+','G','+'],
    ['+',' ',' ','+','+','+'],
    ['+',' ','+',' ','+','+'],
    ['+',' ',' ',' ',' ','+'],
    ['+',' ',' ',' ',' ','+'],
    ['+','+','+','+','+','+'] ]
    
    assert solveMaze(maze3, 4, 4) == False
    assert maze3 == [['+', '+', '+', '+', 'G', '+'], ['+', 8, 9, '+', '+', '+'], ['+', 7, '+', 4, '+', '+'], ['+', 6, 5, 3, 2, '+'], ['+', 10, 11, 12, 1, '+'], ['+', '+', '+', '+', '+', '+']]
'''maze3 = [
    ['+','+','+','+','G','+'],
    ['+',' ',' ','+','+','+'],
    ['+',' ','+',' ','+','+'],
    ['+',' ',' ',' ',' ','+'],
    ['+',' ',' ',' ',' ','+'],
    ['+','+','+','+','+','+'] ]
print(solveMaze(maze3, 4, 4))'''


    

                        
maze3 = [
    ['+','+','+','+','G','+'],
    ['+',' ',' ','+','+','+'],
    ['+',' ','+',' ','+','+'],
    ['+',' ',' ',' ',' ','+'],
    ['+',' ',' ',' ',' ','+'],
    ['+','+','+','+','+','+'] ]

print(solveMaze(maze3, 4, 4))

maze3 = [
    ['+','+','+','+','G','+'],
    ['+',' ',' ','+','+','+'],
    ['+',' ','+',' ','+','+'],
    ['+',' ',' ',' ',' ','+'],
    ['+',' ',' ',' ',' ','+'],
    ['+','+','+','+','+','+'] ]

print(solveMaze(maze3, 4, 4))
print(solveMaze(maze3, 4, 4))
assert solveMaze(maze3, 4, 4) == False